"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./utils/app.js":
/*!**********************!*\
  !*** ./utils/app.js ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeThreeJS: function() { return /* binding */ initializeThreeJS; }\n/* harmony export */ });\nfunction initializeThreeJS(mountPoint) {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 10);\n    const renderer = new THREE.WebGLRenderer({\n        alpha: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    mountPoint.appendChild(renderer.domElement); // Use mountPoint instead of document.body\n    // Custom Shader Material\n    const vertexShader = \"\\n        varying vec2 vUv;\\n        void main() {\\n            vUv = uv;\\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n        }\\n    \";\n    const fragmentShader = \"\\n        varying vec2 vUv;\\n        void main() {\\n            float pattern = abs(sin(vUv.x * 10.0)) * abs(sin(vUv.y * 10.0));\\n            vec4 glassColor = mix(vec4(1.0, 1.0, 1.0, 0.3), vec4(0.5, 0.7, 1.0, 0.8), pattern);\\n            gl_FragColor = glassColor;\\n        }\\n    \";\n    const material = new THREE.ShaderMaterial({\n        vertexShader,\n        fragmentShader,\n        transparent: true\n    });\n    // Plane geometry for the stained glass\n    const planeGeometry = new THREE.PlaneGeometry(20, 20);\n    const planeMesh = new THREE.Mesh(planeGeometry, material);\n    scene.add(planeMesh);\n    // Light that follows the mouse\n    const pointLight = new THREE.PointLight(0xffffff, 1, 100);\n    scene.add(pointLight);\n    // OrbitControls for easy scene navigation\n    const controls = new OrbitControls(camera, renderer.domElement);\n    // Update light position based on mouse movement\n    function onMouseMove(event) {\n        const vector = new THREE.Vector3(event.clientX / window.innerWidth * 2 - 1, -(event.clientY / window.innerHeight) * 2 + 1, 0.5);\n        vector.unproject(camera);\n        const dir = vector.sub(camera.position).normalize();\n        const distance = -camera.position.z / dir.z;\n        const pos = camera.position.clone().add(dir.multiplyScalar(distance));\n        pointLight.position.copy(pos);\n    }\n    window.addEventListener(\"mousemove\", onMouseMove);\n    // Handle window resize\n    function onWindowResize() {\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n        renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n    window.addEventListener(\"resize\", onWindowResize);\n    // Animation loop\n    function animate() {\n        requestAnimationFrame(animate);\n        controls.update();\n        renderer.render(scene, camera);\n    }\n    animate();\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi91dGlscy9hcHAuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLFNBQVNBLGtCQUFrQkMsVUFBVTtJQUN4QyxNQUFNQyxRQUFRLElBQUlDLE1BQU1DLEtBQUs7SUFDN0IsTUFBTUMsU0FBUyxJQUFJRixNQUFNRyxpQkFBaUIsQ0FBQyxJQUFJQyxPQUFPQyxVQUFVLEdBQUdELE9BQU9FLFdBQVcsRUFBRSxLQUFLO0lBQzVGSixPQUFPSyxRQUFRLENBQUNDLEdBQUcsQ0FBQyxHQUFHLEdBQUc7SUFFMUIsTUFBTUMsV0FBVyxJQUFJVCxNQUFNVSxhQUFhLENBQUM7UUFBRUMsT0FBTztJQUFLO0lBQ3ZERixTQUFTRyxPQUFPLENBQUNSLE9BQU9DLFVBQVUsRUFBRUQsT0FBT0UsV0FBVztJQUN0RFIsV0FBV2UsV0FBVyxDQUFDSixTQUFTSyxVQUFVLEdBQUcsMENBQTBDO0lBRXZGLHlCQUF5QjtJQUN6QixNQUFNQyxlQUFnQjtJQVF0QixNQUFNQyxpQkFBa0I7SUFTeEIsTUFBTUMsV0FBVyxJQUFJakIsTUFBTWtCLGNBQWMsQ0FBQztRQUN0Q0g7UUFDQUM7UUFDQUcsYUFBYTtJQUNqQjtJQUVBLHVDQUF1QztJQUN2QyxNQUFNQyxnQkFBZ0IsSUFBSXBCLE1BQU1xQixhQUFhLENBQUMsSUFBSTtJQUNsRCxNQUFNQyxZQUFZLElBQUl0QixNQUFNdUIsSUFBSSxDQUFDSCxlQUFlSDtJQUNoRGxCLE1BQU15QixHQUFHLENBQUNGO0lBRVYsK0JBQStCO0lBQy9CLE1BQU1HLGFBQWEsSUFBSXpCLE1BQU0wQixVQUFVLENBQUMsVUFBVSxHQUFHO0lBQ3JEM0IsTUFBTXlCLEdBQUcsQ0FBQ0M7SUFFViwwQ0FBMEM7SUFDMUMsTUFBTUUsV0FBVyxJQUFJQyxjQUFjMUIsUUFBUU8sU0FBU0ssVUFBVTtJQUU5RCxnREFBZ0Q7SUFDaEQsU0FBU2UsWUFBWUMsS0FBSztRQUN0QixNQUFNQyxTQUFTLElBQUkvQixNQUFNZ0MsT0FBTyxDQUM1QixNQUFPQyxPQUFPLEdBQUc3QixPQUFPQyxVQUFVLEdBQUksSUFBSSxHQUMxQyxDQUFHeUIsQ0FBQUEsTUFBTUksT0FBTyxHQUFHOUIsT0FBT0UsV0FBVyxJQUFJLElBQUksR0FDN0M7UUFFSnlCLE9BQU9JLFNBQVMsQ0FBQ2pDO1FBQ2pCLE1BQU1rQyxNQUFNTCxPQUFPTSxHQUFHLENBQUNuQyxPQUFPSyxRQUFRLEVBQUUrQixTQUFTO1FBQ2pELE1BQU1DLFdBQVcsQ0FBQ3JDLE9BQU9LLFFBQVEsQ0FBQ2lDLENBQUMsR0FBR0osSUFBSUksQ0FBQztRQUMzQyxNQUFNQyxNQUFNdkMsT0FBT0ssUUFBUSxDQUFDbUMsS0FBSyxHQUFHbEIsR0FBRyxDQUFDWSxJQUFJTyxjQUFjLENBQUNKO1FBQzNEZCxXQUFXbEIsUUFBUSxDQUFDcUMsSUFBSSxDQUFDSDtJQUM3QjtJQUNBckMsT0FBT3lDLGdCQUFnQixDQUFDLGFBQWFoQjtJQUVyQyx1QkFBdUI7SUFDdkIsU0FBU2lCO1FBQ0w1QyxPQUFPNkMsTUFBTSxHQUFHM0MsT0FBT0MsVUFBVSxHQUFHRCxPQUFPRSxXQUFXO1FBQ3RESixPQUFPOEMsc0JBQXNCO1FBQzdCdkMsU0FBU0csT0FBTyxDQUFDUixPQUFPQyxVQUFVLEVBQUVELE9BQU9FLFdBQVc7SUFDMUQ7SUFDQUYsT0FBT3lDLGdCQUFnQixDQUFDLFVBQVVDO0lBRWxDLGlCQUFpQjtJQUNqQixTQUFTRztRQUNMQyxzQkFBc0JEO1FBQ3RCdEIsU0FBU3dCLE1BQU07UUFDZjFDLFNBQVMyQyxNQUFNLENBQUNyRCxPQUFPRztJQUMzQjtJQUVBK0M7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi91dGlscy9hcHAuanM/YzI0NCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gaW5pdGlhbGl6ZVRocmVlSlMobW91bnRQb2ludCkge1xuICAgIGNvbnN0IHNjZW5lID0gbmV3IFRIUkVFLlNjZW5lKCk7XG4gICAgY29uc3QgY2FtZXJhID0gbmV3IFRIUkVFLlBlcnNwZWN0aXZlQ2FtZXJhKDc1LCB3aW5kb3cuaW5uZXJXaWR0aCAvIHdpbmRvdy5pbm5lckhlaWdodCwgMC4xLCAxMDAwKTtcbiAgICBjYW1lcmEucG9zaXRpb24uc2V0KDAsIDAsIDEwKTtcblxuICAgIGNvbnN0IHJlbmRlcmVyID0gbmV3IFRIUkVFLldlYkdMUmVuZGVyZXIoeyBhbHBoYTogdHJ1ZSB9KTtcbiAgICByZW5kZXJlci5zZXRTaXplKHdpbmRvdy5pbm5lcldpZHRoLCB3aW5kb3cuaW5uZXJIZWlnaHQpO1xuICAgIG1vdW50UG9pbnQuYXBwZW5kQ2hpbGQocmVuZGVyZXIuZG9tRWxlbWVudCk7IC8vIFVzZSBtb3VudFBvaW50IGluc3RlYWQgb2YgZG9jdW1lbnQuYm9keVxuXG4gICAgLy8gQ3VzdG9tIFNoYWRlciBNYXRlcmlhbFxuICAgIGNvbnN0IHZlcnRleFNoYWRlciA9IGBcbiAgICAgICAgdmFyeWluZyB2ZWMyIHZVdjtcbiAgICAgICAgdm9pZCBtYWluKCkge1xuICAgICAgICAgICAgdlV2ID0gdXY7XG4gICAgICAgICAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiBtb2RlbFZpZXdNYXRyaXggKiB2ZWM0KHBvc2l0aW9uLCAxLjApO1xuICAgICAgICB9XG4gICAgYDtcblxuICAgIGNvbnN0IGZyYWdtZW50U2hhZGVyID0gYFxuICAgICAgICB2YXJ5aW5nIHZlYzIgdlV2O1xuICAgICAgICB2b2lkIG1haW4oKSB7XG4gICAgICAgICAgICBmbG9hdCBwYXR0ZXJuID0gYWJzKHNpbih2VXYueCAqIDEwLjApKSAqIGFicyhzaW4odlV2LnkgKiAxMC4wKSk7XG4gICAgICAgICAgICB2ZWM0IGdsYXNzQ29sb3IgPSBtaXgodmVjNCgxLjAsIDEuMCwgMS4wLCAwLjMpLCB2ZWM0KDAuNSwgMC43LCAxLjAsIDAuOCksIHBhdHRlcm4pO1xuICAgICAgICAgICAgZ2xfRnJhZ0NvbG9yID0gZ2xhc3NDb2xvcjtcbiAgICAgICAgfVxuICAgIGA7XG5cbiAgICBjb25zdCBtYXRlcmlhbCA9IG5ldyBUSFJFRS5TaGFkZXJNYXRlcmlhbCh7XG4gICAgICAgIHZlcnRleFNoYWRlcixcbiAgICAgICAgZnJhZ21lbnRTaGFkZXIsXG4gICAgICAgIHRyYW5zcGFyZW50OiB0cnVlXG4gICAgfSk7XG5cbiAgICAvLyBQbGFuZSBnZW9tZXRyeSBmb3IgdGhlIHN0YWluZWQgZ2xhc3NcbiAgICBjb25zdCBwbGFuZUdlb21ldHJ5ID0gbmV3IFRIUkVFLlBsYW5lR2VvbWV0cnkoMjAsIDIwKTtcbiAgICBjb25zdCBwbGFuZU1lc2ggPSBuZXcgVEhSRUUuTWVzaChwbGFuZUdlb21ldHJ5LCBtYXRlcmlhbCk7XG4gICAgc2NlbmUuYWRkKHBsYW5lTWVzaCk7XG5cbiAgICAvLyBMaWdodCB0aGF0IGZvbGxvd3MgdGhlIG1vdXNlXG4gICAgY29uc3QgcG9pbnRMaWdodCA9IG5ldyBUSFJFRS5Qb2ludExpZ2h0KDB4ZmZmZmZmLCAxLCAxMDApO1xuICAgIHNjZW5lLmFkZChwb2ludExpZ2h0KTtcblxuICAgIC8vIE9yYml0Q29udHJvbHMgZm9yIGVhc3kgc2NlbmUgbmF2aWdhdGlvblxuICAgIGNvbnN0IGNvbnRyb2xzID0gbmV3IE9yYml0Q29udHJvbHMoY2FtZXJhLCByZW5kZXJlci5kb21FbGVtZW50KTtcblxuICAgIC8vIFVwZGF0ZSBsaWdodCBwb3NpdGlvbiBiYXNlZCBvbiBtb3VzZSBtb3ZlbWVudFxuICAgIGZ1bmN0aW9uIG9uTW91c2VNb3ZlKGV2ZW50KSB7XG4gICAgICAgIGNvbnN0IHZlY3RvciA9IG5ldyBUSFJFRS5WZWN0b3IzKFxuICAgICAgICAgICAgKGV2ZW50LmNsaWVudFggLyB3aW5kb3cuaW5uZXJXaWR0aCkgKiAyIC0gMSxcbiAgICAgICAgICAgIC0gKGV2ZW50LmNsaWVudFkgLyB3aW5kb3cuaW5uZXJIZWlnaHQpICogMiArIDEsXG4gICAgICAgICAgICAwLjVcbiAgICAgICAgKTtcbiAgICAgICAgdmVjdG9yLnVucHJvamVjdChjYW1lcmEpO1xuICAgICAgICBjb25zdCBkaXIgPSB2ZWN0b3Iuc3ViKGNhbWVyYS5wb3NpdGlvbikubm9ybWFsaXplKCk7XG4gICAgICAgIGNvbnN0IGRpc3RhbmNlID0gLWNhbWVyYS5wb3NpdGlvbi56IC8gZGlyLno7XG4gICAgICAgIGNvbnN0IHBvcyA9IGNhbWVyYS5wb3NpdGlvbi5jbG9uZSgpLmFkZChkaXIubXVsdGlwbHlTY2FsYXIoZGlzdGFuY2UpKTtcbiAgICAgICAgcG9pbnRMaWdodC5wb3NpdGlvbi5jb3B5KHBvcyk7XG4gICAgfVxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBvbk1vdXNlTW92ZSk7XG5cbiAgICAvLyBIYW5kbGUgd2luZG93IHJlc2l6ZVxuICAgIGZ1bmN0aW9uIG9uV2luZG93UmVzaXplKCkge1xuICAgICAgICBjYW1lcmEuYXNwZWN0ID0gd2luZG93LmlubmVyV2lkdGggLyB3aW5kb3cuaW5uZXJIZWlnaHQ7XG4gICAgICAgIGNhbWVyYS51cGRhdGVQcm9qZWN0aW9uTWF0cml4KCk7XG4gICAgICAgIHJlbmRlcmVyLnNldFNpemUod2luZG93LmlubmVyV2lkdGgsIHdpbmRvdy5pbm5lckhlaWdodCk7XG4gICAgfVxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBvbldpbmRvd1Jlc2l6ZSk7XG5cbiAgICAvLyBBbmltYXRpb24gbG9vcFxuICAgIGZ1bmN0aW9uIGFuaW1hdGUoKSB7XG4gICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShhbmltYXRlKTtcbiAgICAgICAgY29udHJvbHMudXBkYXRlKCk7XG4gICAgICAgIHJlbmRlcmVyLnJlbmRlcihzY2VuZSwgY2FtZXJhKTtcbiAgICB9XG5cbiAgICBhbmltYXRlKCk7XG59Il0sIm5hbWVzIjpbImluaXRpYWxpemVUaHJlZUpTIiwibW91bnRQb2ludCIsInNjZW5lIiwiVEhSRUUiLCJTY2VuZSIsImNhbWVyYSIsIlBlcnNwZWN0aXZlQ2FtZXJhIiwid2luZG93IiwiaW5uZXJXaWR0aCIsImlubmVySGVpZ2h0IiwicG9zaXRpb24iLCJzZXQiLCJyZW5kZXJlciIsIldlYkdMUmVuZGVyZXIiLCJhbHBoYSIsInNldFNpemUiLCJhcHBlbmRDaGlsZCIsImRvbUVsZW1lbnQiLCJ2ZXJ0ZXhTaGFkZXIiLCJmcmFnbWVudFNoYWRlciIsIm1hdGVyaWFsIiwiU2hhZGVyTWF0ZXJpYWwiLCJ0cmFuc3BhcmVudCIsInBsYW5lR2VvbWV0cnkiLCJQbGFuZUdlb21ldHJ5IiwicGxhbmVNZXNoIiwiTWVzaCIsImFkZCIsInBvaW50TGlnaHQiLCJQb2ludExpZ2h0IiwiY29udHJvbHMiLCJPcmJpdENvbnRyb2xzIiwib25Nb3VzZU1vdmUiLCJldmVudCIsInZlY3RvciIsIlZlY3RvcjMiLCJjbGllbnRYIiwiY2xpZW50WSIsInVucHJvamVjdCIsImRpciIsInN1YiIsIm5vcm1hbGl6ZSIsImRpc3RhbmNlIiwieiIsInBvcyIsImNsb25lIiwibXVsdGlwbHlTY2FsYXIiLCJjb3B5IiwiYWRkRXZlbnRMaXN0ZW5lciIsIm9uV2luZG93UmVzaXplIiwiYXNwZWN0IiwidXBkYXRlUHJvamVjdGlvbk1hdHJpeCIsImFuaW1hdGUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJ1cGRhdGUiLCJyZW5kZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./utils/app.js\n"));

/***/ })

});